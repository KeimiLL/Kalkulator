<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        fa8MlgAAAABJRU5ErkJggg==
</value>
  </data>
</root>