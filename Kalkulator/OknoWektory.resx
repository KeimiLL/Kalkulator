<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        5RZoKwAAAABJRU5ErkJggg==
</value>
  </data>
</root>