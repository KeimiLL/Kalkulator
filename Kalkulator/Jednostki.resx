<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gcAu/B8o0CRQHp5F3gAAAABJRU5ErkJggg==
</value>
  </data>
</root>